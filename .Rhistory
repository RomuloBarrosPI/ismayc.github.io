mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data_frame(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
mean_srs = mean_srs_salary)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
mean_srs = mean_srs_salary)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
sim <- data_frame(bind_cols(srs_sim, strat_sim))
sim <- as.data_frame(bind_cols(srs_sim, strat_sim))
sim <- as.data.frame(bind_cols(srs_sim, strat_sim))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: strat-samp
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
# Chunk 3: plot-strat
library(mosaic)
densityplot(~salary, groups = teams, data = df, auto.key = TRUE)
# Chunk 4: sim
# population mean
mean(~salary, data = df)
# SRS
mean(~salary, data = sample(df, 40))
# Stratified sample
strat.samp <- rbind(sample(subset(df, teams == "yankees"), 10), sample(subset(df,
teams == "padres"), 10), sample(subset(df, teams == "mariners"), 10), sample(subset(df,
teams == "dodgers"), 10))
mean(~salary, data = strat.samp)
# Comparison
SRS <- do(1000) * mean(~salary, data = sample(df, 40))
STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
sample(subset(df, teams == "padres"), 10),
sample(subset(df, teams == "mariners"), 10),
sample(subset(df, teams == "dodgers"), 10)))
sim <- data.frame(SRS, STR)
names(sim) = c("SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
View(mean_strat_by_team)
View(salaries_summary)
# Chunk 1: setup
pkg <- c("dplyr", "readr", "mosaic")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
lapply(pkg, library, character.only = TRUE)
#setwd("/Users/cismay/Google Drive/ismayc.github.io")
# Chunk 2: load_data
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
# Chunk 3
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(90) %>%
summarize(mean_srs_salary = mean(SALARY))
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
# Chunk 1: setup
pkg <- c("dplyr", "readr", "mosaic")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
lapply(pkg, library, character.only = TRUE)
#setwd("/Users/cismay/Google Drive/ismayc.github.io")
# Chunk 2: load_data
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
# Chunk 3
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
n <- 150
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(n) %>%
summarize(mean_srs_salary = mean(SALARY))
strat_n <- 5
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(grand_mean)
dim(present)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(oilabs)
arbuthnot$girls
qplot(x = year, y = girls, data = arbuthnot, geom = "line")
arbuthnot <- mutate(arbuthnot, total = boys + girls)
arbuthnot <- mutate(arbuthnot, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = arbuthnot, geom = "line")
dim(present)
names(present)
View(present)
present <- mutate(present, total = boys + girls)
present <- mutate(present, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = present, geom = "line")
?perl
?knitr::perl
purl("01C-experiments.Rmd", "01C.R")
knitr::purl("01C-experiments.Rmd", "01C.R")
getwd()
knitr::purl("/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C-experiments.Rmd", "/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C.R")
?ioslides_presentation
?rnorm
gpa <- rnorm(17, mean = 3.15, sd = 1)
gpa
gpa <- rnorm(17, mean = 3.15, sd = 0.3)
gpa
gpa <- round(rnorm(17, mean = 3.15, sd = 0.3), 2)
gpa
gpa <- round(rnorm(17, mean = 3.15, sd = 0.5), 2)
gpa <- round(rnorm(17, mean = 3.15, sd = 0.5), 2)
gpa
gpa <- round(rnorm(17, mean = 3, sd = 0.5), 2)
gpa <- round(rnorm(17, mean = 3, sd = 0.5), 2)
gpa
set.seed(20160201)
gpa <- round(rnorm(17, mean = 3, sd = 0.5), 2)
gpa
?kable
set.seed(20160201)
gpa <- round(rnorm(10, mean = 3, sd = 0.5), 2)
kable(gpa, row.names = TRUE)
kable(head(iris), format = "html")
library(knitr)
kable(head(iris), format = "html")
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot()
# Chunk 1: setup
# List of useful packages
pkg <- c("dplyr", "ggplot2", "knitr")
# Check if packages are not installed and assign the
# names of the uninstalled packages to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
# Load the packages into the current environment
library(knitr)
library(dplyr)
library(ggplot2)
# Set number of digits to display
options(digits = 3)
# Chunk 2
set.seed(20160201)
gpa <- round(rnorm(10, mean = 3, sd = 0.5), 2)
kable(data.frame(gpa), row.names = TRUE, align = c("l", "r"))
# Chunk 3
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot()
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.1)
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.05)
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.01)
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.03)
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.05)
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.05)
?ylim
data.frame(gpa) %>% ggplot(aes(x = gpa)) + geom_dotplot(binwidth = 0.05) +
scale_y_continuous(name = "", breaks = NULL)
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_density()
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_histogram(binwidth = 0.05)
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_histogram(binwidth = 0.5)
?colors
?color
colors
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_histogram(binwidth = 0.5, colour="black", fill = "goldenrod")
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_density()
data.frame(gpa) %>% ggplot(aes(x = gpa)) +
geom_boxplot()
data.frame(gpa) %>% ggplot(aes(x= 1, y=gpa)) +
geom_boxplot()
data.frame(gpa) %>% ggplot(aes(x = "", y = gpa)) +
geom_boxplot() +
coord_flip()
data.frame(gpa) %>% ggplot(aes(x = NULL, y = gpa)) +
geom_boxplot() +
coord_flip()
data.frame(gpa) %>% ggplot(aes(x = '', y = gpa)) +
geom_boxplot() +
coord_flip()
?mode
?range
y <- x
# Chunk 1: setup
# List of useful packages
pkg <- c("dplyr", "ggplot2", "knitr")
# Check if packages are not installed and assign the
# names of the uninstalled packages to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
# Load the packages into the current environment
library(knitr)
library(dplyr)
library(ggplot2)
# Set number of digits to display
options(digits = 2)
# Chunk 2
x <- c(8, 11, 7, 7, 8, 11, 9, 6, 10, 7, 9)
# Chunk 3
mean(x)
# Chunk 4
sort(x)
median(x)
# Chunk 5
table(x)
# Chunk 6
mode(x)
# Chunk 7
x - mean(x)
(x - mean(x))^2
sum((x - mean(x))^2) / (length(x) - 1)
var(x)
# Chunk 8
sqrt(var(x))
sd(x)
# Chunk 9
sort(x)
IQR(x)
# Chunk 10
max(X) - min(X)
range(X)
diff(range(X))
# Chunk 1: setup
# List of useful packages
pkg <- c("dplyr", "ggplot2", "knitr")
# Check if packages are not installed and assign the
# names of the uninstalled packages to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
# Load the packages into the current environment
library(knitr)
library(dplyr)
library(ggplot2)
# Set number of digits to display
options(digits = 2)
# Chunk 2
x <- c(8, 11, 7, 7, 8, 11, 9, 6, 10, 7, 9)
# Chunk 3
mean(x)
# Chunk 4
sort(x)
median(x)
# Chunk 5
table(x)
# Chunk 6
mode(x)
# Chunk 7
x - mean(x)
(x - mean(x))^2
sum((x - mean(x))^2) / (length(x) - 1)
var(x)
# Chunk 8
sqrt(var(x))
sd(x)
# Chunk 9
sort(x)
IQR(x)
max(x) - min(x)
range(x)
diff(range(x))
x
getwd()
purl("./slides/02/02a.Rmd", "./slides/02/02a.R")
purl("./slides/02/02a.Rmd", "./slides/02/02a.R")
# Chunk 1: setup
# List of useful packages
pkg <- c("dplyr", "ggplot2", "knitr")
# Check if packages are not installed and assign the
# names of the uninstalled packages to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
# Load the packages into the current environment
library(knitr)
library(dplyr)
library(ggplot2)
# Set number of digits to display
options(digits = 3)
mean(gpa)
purl("./slides/02/02a.Rmd", "./slides/02/02a.R")
purl("./notes/Week_02/Monday.Rmd", "./slides/02a_plots.R")
