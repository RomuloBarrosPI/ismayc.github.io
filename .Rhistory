# Chunk 24
summary(m1)
# Chunk 26
nyc[1:3, ]
# Chunk 27
m2 <- lm(Price ~ Food + Decor + East, data = nyc)
summary(m2)
# Chunk 29
m3 <- lm(Price ~ Food + Decor + East + Decor:East, data = nyc)
summary(m3)
# Chunk 31
betas <- c(0, 1, 1, -4, 1)
sigma <- 5
n <- 40
set.seed(110)
x <- runif(n, 0, 5)
EyGx <- betas[1] + betas[2]*x + betas[3]*x^2 + betas[4]*x^3 + betas[5]*x^4
y <- EyGx + rnorm(n, 0, sigma)
plot(y ~ x, pch = 16, col = "steelblue")
# Chunk 32
m1 <- lm(y ~ x)
m2 <- lm(y ~ x + I(x^2))
m3 <- lm(y ~ x + I(x^2) + I(x^3))
m4 <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
# Chunk 33
# plotting function
plot_m <- function(x, y, m) {
plot(y ~ x, pch = 16, col = "steelblue")
x_range <- par("xaxp")[1:2]
xx <- seq(x_range[1], x_range[2], length.out = 300)
yy <- predict(m, newdata = data.frame("x" = xx))
lines(xx, yy, lwd = 2, col = "orange")
}
# Chunk 34
par(mfrow = c(2, 2))
plot_m(x, y, m1)
plot_m(x, y, m2)
plot_m(x, y, m3)
plot_m(x, y, m4)
# Chunk 35
c(summary(m1)$r.squared,
summary(m2)$r.squared,
summary(m3)$r.squared,
summary(m4)$r.squared)
# Chunk 36
mBEST <- lm(y ~ poly(x, 20))
plot_m(x, y, mBEST)
# Chunk 37
mBEST <- lm(y ~ poly(x, 20))
c(summary(m1)$r.squared,
summary(m2)$r.squared,
summary(m3)$r.squared,
summary(m4)$r.squared,
summary(mBEST)$r.squared)
# Chunk 38
summary(mBEST)$r.squared
summary(mBEST)$adj.r.squared
# Chunk 39
poverty <- read.delim("poverty.txt", header = TRUE)
m1 <- lm(Poverty ~ Graduates, data = poverty)
summary(m1)
poverty$Noise <- rnorm(nrow(poverty))
m2 <- lm(Poverty ~ Graduates + Noise, data = poverty)
summary(m2)
# Chunk 40
head(email)
# where did this data come from / how was it collected?
# Chunk 41
qplot(x = winner, fill = factor(spam), data = email, geom = "bar",
position = "fill", ylab = "proportion")
# Chunk 42
qplot(x = num_char, col = factor(spam), data = email, geom = "density")
# Chunk 43
qplot(x = log(num_char), col = factor(spam), data = email, geom = "density")
qplot(x = log(num_char), y = spam, data = email, geom = "point",
alpha = I(.1), ylab = "spam") + stat_smooth(method = "glm", family = "binomial",
se = FALSE)
?stat_smooth
qplot(x = log(num_char), y = spam, data = email, geom = "point",
alpha = I(.1), ylab = "spam") + stat_smooth(method = "glm", family = binomial,
se = FALSE)
qplot(x = log(num_char), y = spam, data = email, geom = "point",
alpha = I(.1), ylab = "spam") + stat_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE)
# Chunk 1: setup
library(knitr)
options(digits=3)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
# Chunk 7: resplot
qplot(x = .fitted, y = .stdresid, data = m1)
# Chunk 8: resplot2
qplot(sample = .stdresid, data = m1) + geom_abline(col = "purple")
# Chunk 9: sumtable
summary(m1)
# Chunk 11: plotcolors
qplot(x = volume, y = weight, color = cover, data = books)
# Chunk 12
m2 <- lm(weight ~ volume + cover, data = books)
summary(m2)
# Chunk 13
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 14
summary(m2)
# Chunk 15
summary(m2)$coef
qt(.025, df = nrow(books) - 3)
# Chunk 16
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 17
qplot(x = volume, y = weight, color = cover, data = books) +
stat_smooth(method = "lm", se = FALSE)
# Chunk 18
m3 <- lm(weight ~ volume + cover + volume:cover, data = books)
summary(m3)
# Chunk 19
qnorm(.025)
qt(.025, df = 13)
qt(.025, df = 14)
qt(.05, df = 13)
qt(.05, df = 14)
# Chunk 20
nyc <- read.csv("http://andrewpbray.github.io/data/nyc.csv")
head(nyc, 3)
dim(nyc)
plot3d(x = nyc$Food, y = nyc$Decor, z = nyc$Price, col = "steelblue",
xlab = "Food rating", ylab = "Decor Rating", zlab = "Price")
m1 <- lm(Price ~ Food + Decor, data = nyc)
coefs <- m1$coef
planes3d(coefs["Food"], coefs["Decor"], -1, coefs["(Intercept)"],
alpha = 0.4, col = "lightgray")
# Chunk 1: setup
library(knitr)
options(digits=3)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
# Chunk 7: resplot
qplot(x = .fitted, y = .stdresid, data = m1)
# Chunk 8: resplot2
qplot(sample = .stdresid, data = m1) + geom_abline(col = "purple")
# Chunk 9: sumtable
summary(m1)
# Chunk 11: plotcolors
qplot(x = volume, y = weight, color = cover, data = books)
# Chunk 12
m2 <- lm(weight ~ volume + cover, data = books)
summary(m2)
# Chunk 13
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 14
summary(m2)
# Chunk 15
summary(m2)$coef
qt(.025, df = nrow(books) - 3)
# Chunk 16
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 17
qplot(x = volume, y = weight, color = cover, data = books) +
stat_smooth(method = "lm", se = FALSE)
# Chunk 18
m3 <- lm(weight ~ volume + cover + volume:cover, data = books)
summary(m3)
# Chunk 19
qnorm(.025)
qt(.025, df = 13)
qt(.025, df = 14)
qt(.05, df = 13)
qt(.05, df = 14)
# Chunk 20
nyc <- read.csv("http://andrewpbray.github.io/data/nyc.csv")
# Chunk 21
head(nyc, 3)
dim(nyc)
# Chunk 23
head(nyc, 3)
m1 <- lm(Price ~ Food + Decor, data = nyc)
# Chunk 24
summary(m1)
plot3d(x = nyc$Food, y = nyc$Decor, z = nyc$Price, col = "steelblue",
xlab = "Food rating", ylab = "Decor Rating", zlab = "Price")
m1 <- lm(Price ~ Food + Decor, data = nyc)
coefs <- m1$coef
planes3d(coefs["Food"], coefs["Decor"], -1, coefs["(Intercept)"],
alpha = 0.4, col = "lightgray")
install.packages("rgl")
# Chunk 1: setup
library(knitr)
options(digits=3)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
# Chunk 7: resplot
qplot(x = .fitted, y = .stdresid, data = m1)
# Chunk 8: resplot2
qplot(sample = .stdresid, data = m1) + geom_abline(col = "purple")
# Chunk 9: sumtable
summary(m1)
# Chunk 11: plotcolors
qplot(x = volume, y = weight, color = cover, data = books)
# Chunk 12
m2 <- lm(weight ~ volume + cover, data = books)
summary(m2)
# Chunk 13
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 14
summary(m2)
# Chunk 15
summary(m2)$coef
qt(.025, df = nrow(books) - 3)
# Chunk 16
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 17
qplot(x = volume, y = weight, color = cover, data = books) +
stat_smooth(method = "lm", se = FALSE)
# Chunk 18
m3 <- lm(weight ~ volume + cover + volume:cover, data = books)
summary(m3)
# Chunk 19
qnorm(.025)
qt(.025, df = 13)
qt(.025, df = 14)
qt(.05, df = 13)
qt(.05, df = 14)
# Chunk 20
nyc <- read.csv("http://andrewpbray.github.io/data/nyc.csv")
# Chunk 21
head(nyc, 3)
dim(nyc)
library(rgl)
plot3d(x = nyc$Food, y = nyc$Decor, z = nyc$Price, col = "steelblue",
xlab = "Food rating", ylab = "Decor Rating", zlab = "Price")
m1 <- lm(Price ~ Food + Decor, data = nyc)
coefs <- m1$coef
planes3d(coefs["Food"], coefs["Decor"], -1, coefs["(Intercept)"],
alpha = 0.4, col = "lightgray")
plot3d(x = nyc$Food, y = nyc$Decor, z = nyc$Price, col = "steelblue",
xlab = "Food rating", ylab = "Decor Rating", zlab = "Price")
install.packages("rglwidget")
install.packages("knitr")
install.packages("knitr")
install.packages('knitr', repos='http://www.rforge.net/', type='source')
install.packages("knitr", repos = "http://www.rforge.net/", type = "source")
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
#knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
# Chunk 7: resplot
qplot(x = .fitted, y = .stdresid, data = m1)
# Chunk 8: resplot2
qplot(sample = .stdresid, data = m1) + geom_abline(col = "purple")
# Chunk 9: sumtable
summary(m1)
# Chunk 11: plotcolors
qplot(x = volume, y = weight, color = cover, data = books)
# Chunk 12
m2 <- lm(weight ~ volume + cover, data = books)
summary(m2)
# Chunk 13
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 14
summary(m2)
# Chunk 15
summary(m2)$coef
qt(.025, df = nrow(books) - 3)
# Chunk 16
qplot(x = volume, y = weight, color = cover, data = books) +
geom_abline(intercept = m2$coef[1], slope = m2$coef[2], col = 2) +
geom_abline(intercept = m2$coef[1] + m2$coef[3], slope = m2$coef[2], col = 4)
# Chunk 17
qplot(x = volume, y = weight, color = cover, data = books) +
stat_smooth(method = "lm", se = FALSE)
# Chunk 18
m3 <- lm(weight ~ volume + cover + volume:cover, data = books)
summary(m3)
# Chunk 19
qnorm(.025)
qt(.025, df = 13)
qt(.025, df = 14)
qt(.05, df = 13)
qt(.05, df = 14)
# Chunk 20
nyc <- read.csv("http://andrewpbray.github.io/data/nyc.csv")
# Chunk 21
head(nyc, 3)
dim(nyc)
library(rgl)
plot3d(x = nyc$Food, y = nyc$Decor, z = nyc$Price, col = "steelblue",
xlab = "Food rating", ylab = "Decor Rating", zlab = "Price")
m1 <- lm(Price ~ Food + Decor, data = nyc)
coefs <- m1$coef
planes3d(coefs["Food"], coefs["Decor"], -1, coefs["(Intercept)"],
alpha = 0.4, col = "lightgray")
?open3d
?close3d
?ioslides_presentation
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3, width=100)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
View(books)
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3, width=100)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
library(plotly)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
plt <- qplot(x = volume, y = weight, data = books)
ggplotly(plt)
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3, width=100)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
library(plotly)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
plt <- qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
ggplotly(plt)
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3, width=100)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
library(plotly)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
#qplot(x = .fitted, y = .stdresid, data = m1)
m1 %>% ggplot(aes(x = .fitted, y = .stdresid)) + geom_point()
#qplot(x = .fitted, y = .stdresid, data = m1)
plt <- m1 %>% ggplot(aes(x = .fitted, y = .stdresid)) + geom_point()
ggplotly(plt)
install.packages("plotly")
install.packages("plotly")
# Chunk 1: setup
library(knitr)
library(rglwidget)
options(digits=3, width=100)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(rgl)
knit_hooks$set(webgl = hook_webgl)
library(dplyr)
library(ggplot2)
library(oilabs)
library(openintro)
library(plotly)
# Chunk 2: getdata
library(DAAG)
data(allbacks)
books <- allbacks[, c(3, 1, 4)]
# Chunk 3: plotallbacks
qplot(x = volume, y = weight, data = books)
# Chunk 4: fitm1
m1 <- lm(weight ~ volume, data = books)
# Chunk 5: plotallbackswline
qplot(x = volume, y = weight, data = books) +
geom_abline(intercept = m1$coef[1], slope = m1$coef[2], col = "orchid")
# Chunk 6
m1 <- lm(weight ~ volume, data = books)
summary(m1)
#qplot(x = .fitted, y = .stdresid, data = m1)
plt <- m1 %>% ggplot(aes(x = .fitted, y = .stdresid)) + geom_point()
ggplotly(plt)
plt <- qplot(x = .fitted, y = .stdresid, data = m1)
#plt <- m1 %>% ggplot(aes(x = .fitted, y = .stdresid)) + geom_point()
ggplotly(plt)
plt <- qplot(sample = .stdresid, data = m1) + geom_abline(col = "purple")
ggplotly(plt)
qplot(x = .fitted, y = .stdresid, data = m1)
ggplotly()
m1$fitted.values
books$weight
qplot(x = .fitted, y = .resid, data = m1)
ggplotly()
qplot(sample = .resid, data = m1) + geom_abline(col = "purple")
ggplotly()
summary(m1)
