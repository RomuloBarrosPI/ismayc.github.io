}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n()) %>%
rename(mean_srs = mean_srs_salary)
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows %>%
mutate(replicate = 1:n()) #%>%
#rename(mean_strat = mean(mean_by_team))
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data.frame(srs_sim, strat_sim)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
View(sim)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n()) %>%
rename(mean_srs = mean_srs_salary)
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows %>%
mutate(replicate = 1:n()) %>%
rename(mean_strat = mean.mean_by_team.)
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data.frame(srs_sim, strat_sim)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data_frame(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
rename(mean_srs = mean_srs_salary))
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data_frame(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
mean_srs = mean_srs_salary)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
View(sim)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- data_frame(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
mean_srs = mean_srs_salary)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim)
sim <- sim %>%
rename(mean_strat = mean.mean_by_team.,
mean_srs = mean_srs_salary)
#names(sim) = c("SRS", "STR")
#densityplot(~SRS + STR, data = sim, auto.key = TRUE)
sim <- data_frame(bind_cols(srs_sim, strat_sim))
sim <- as.data_frame(bind_cols(srs_sim, strat_sim))
sim <- as.data.frame(bind_cols(srs_sim, strat_sim))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, 150), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), 5), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: strat-samp
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
# Chunk 3: plot-strat
library(mosaic)
densityplot(~salary, groups = teams, data = df, auto.key = TRUE)
# Chunk 4: sim
# population mean
mean(~salary, data = df)
# SRS
mean(~salary, data = sample(df, 40))
# Stratified sample
strat.samp <- rbind(sample(subset(df, teams == "yankees"), 10), sample(subset(df,
teams == "padres"), 10), sample(subset(df, teams == "mariners"), 10), sample(subset(df,
teams == "dodgers"), 10))
mean(~salary, data = strat.samp)
# Comparison
SRS <- do(1000) * mean(~salary, data = sample(df, 40))
STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
sample(subset(df, teams == "padres"), 10),
sample(subset(df, teams == "mariners"), 10),
sample(subset(df, teams == "dodgers"), 10)))
sim <- data.frame(SRS, STR)
names(sim) = c("SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
View(mean_strat_by_team)
View(salaries_summary)
# Chunk 1: setup
pkg <- c("dplyr", "readr", "mosaic")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
lapply(pkg, library, character.only = TRUE)
#setwd("/Users/cismay/Google Drive/ismayc.github.io")
# Chunk 2: load_data
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
# Chunk 3
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(90) %>%
summarize(mean_srs_salary = mean(SALARY))
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
# Chunk 1: setup
pkg <- c("dplyr", "readr", "mosaic")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
lapply(pkg, library, character.only = TRUE)
#setwd("/Users/cismay/Google Drive/ismayc.github.io")
# Chunk 2: load_data
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
# Chunk 3
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
n <- 150
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(n) %>%
summarize(mean_srs_salary = mean(SALARY))
strat_n <- 5
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(grand_mean)
dim(present)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(oilabs)
arbuthnot$girls
qplot(x = year, y = girls, data = arbuthnot, geom = "line")
arbuthnot <- mutate(arbuthnot, total = boys + girls)
arbuthnot <- mutate(arbuthnot, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = arbuthnot, geom = "line")
dim(present)
names(present)
View(present)
present <- mutate(present, total = boys + girls)
present <- mutate(present, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = present, geom = "line")
?perl
?knitr::perl
purl("01C-experiments.Rmd", "01C.R")
knitr::purl("01C-experiments.Rmd", "01C.R")
getwd()
knitr::purl("/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C-experiments.Rmd", "/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C.R")
?md_document
0.91*0.15
# Chunk 1: setup
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Chunk 2
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1)
summary(kobe_streak$length)
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1,
color = "black", fill = "blue")
summary(kobe_streak$length)
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1,
color = I("black"), fill = I("blue"))
summary(kobe_streak$length)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(oilabs)
library(dplyr)
library(ggplot2)
data(kobe)
kobe_streak <- calc_streak(kobe$basket)
qplot(x = kobe_streak, geom = "bar",
color = I("black"), fill = I("blue"))
summary(kobe_streak$length)
kobe_streak <- calc_streak(kobe$basket)
qplot(x = kobe_streak, geom = "bar",
color = I("black"), fill = I("blue"))
summary(kobe_streak)
coin_outcomes <- c("heads", "tails")
set.seed(302)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
table(sim_unfair_coin)
unfair_table[1]
coin_outcomes <- c("heads", "tails")
set.seed(302)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
unfair_table <- table(sim_unfair_coin)
unfair_table
unfair_table[1]
qplot(x = sim_streak, geom = "bar", binwidth = 1)
summary(sim_streak)
sim_streak <- calc_streak(sim_basket)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE,
prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
qplot(x = sim_streak, geom = "bar", binwidth = 1)
summary(sim_streak)
qplot(x = sim_streak, geom = "bar")
summary(sim_streak)
qplot(x = sim_streak, geom = "bar", color = I("black"), fill = I("blue"))
summary(sim_streak)
