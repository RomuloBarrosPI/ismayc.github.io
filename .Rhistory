salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(90) %>%
summarize(mean_srs_salary = mean(SALARY))
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
# Chunk 1: setup
pkg <- c("dplyr", "readr", "mosaic")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
lapply(pkg, library, character.only = TRUE)
#setwd("/Users/cismay/Google Drive/ismayc.github.io")
# Chunk 2: load_data
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
# Chunk 3
teams <- c(rep("yankees", 40), rep("padres", 40), rep("mariners", 40), rep("dodgers", 40))
salary <- c(rnorm(40, mean = 25), rnorm(40, 16), rnorm(40, 23), rnorm(40, 15))
df <- data.frame(teams, salary)
head(df)
n <- 150
# Chunk 4
set.seed(20160129)
mean_srs <- salaries %>%
sample_n(n) %>%
summarize(mean_srs_salary = mean(SALARY))
strat_n <- 5
# Chunk 5: sim
mean_strat_by_team <- salaries %>% group_by(TEAM) %>%
sample_n(5) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
# Chunk 6: comp
srs_mean <- function(df){
df %>%
summarize(mean_srs_salary = mean(SALARY))
}
strat_mean <- function(df){
mean_strat_by_team <- df %>% group_by(TEAM) %>%
sample_n(strat_n) %>%
summarize(mean_by_team = mean(SALARY))
mean_strat <- mean_strat_by_team %>%
summarize(mean(mean_by_team))
mean_strat
}
# sample repeatedly (1000 times) 150 rows of df and store in a list
# apply the custom function to each sample in the list,
# bind rows together and create an index column, all in a "pipe":
srs_sim <- replicate(1000, sample_n(salaries, n), simplify = FALSE) %>%
lapply(., srs_mean) %>%
bind_rows %>%
mutate(replicate = 1:n())
strat_sim <- replicate(1000, sample_n(group_by(salaries, TEAM), strat_n), simplify = FALSE) %>%
lapply(., strat_mean) %>%
bind_rows
# Comparison
#SRS <- do(1000) * mean(~salary, data = df)
#STR <- do(1000) * mean(~salary, data = rbind(sample(subset(df, teams == "yankees"), 10),
#                                             sample(subset(df, teams == "padres"), 10),
#                                             sample(subset(df, teams == "mariners"), 10),
#                                             sample(subset(df, teams == "dodgers"), 10)))
sim <- bind_cols(srs_sim, strat_sim) %>%
select(replicate, everything())
names(sim) <- c("replicate", "SRS", "STR")
densityplot(~SRS + STR, data = sim, auto.key = TRUE)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_summary <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(salaries_summary)
url <- "http://www.usatoday.com/sports/mlb/salaries/"
salaries <- read_csv("mlb_salaries.csv") %>%
select(NAME, TEAM, POS, SALARY)
salaries_trim <- salaries %>%
filter(TEAM %in% c("LAD", "NYY", "TB", "ARI"))
salaries_summary <- salaries_trim %>% group_by(TEAM) %>%
summarize(mean_sal = mean(SALARY),
count_team = n())
grand_mean <- salaries %>% summarize(mean(SALARY))
View(grand_mean)
dim(present)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(oilabs)
arbuthnot$girls
qplot(x = year, y = girls, data = arbuthnot, geom = "line")
arbuthnot <- mutate(arbuthnot, total = boys + girls)
arbuthnot <- mutate(arbuthnot, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = arbuthnot, geom = "line")
dim(present)
names(present)
View(present)
present <- mutate(present, total = boys + girls)
present <- mutate(present, boy_ratio = boys / total)
qplot(x = year, y = boy_ratio, data = present, geom = "line")
?perl
?knitr::perl
purl("01C-experiments.Rmd", "01C.R")
knitr::purl("01C-experiments.Rmd", "01C.R")
getwd()
knitr::purl("/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C-experiments.Rmd", "/Users/cismay/Google Drive/ismayc.github.io/slides/01-intro/01C.R")
?md_document
0.91*0.15
# Chunk 1: setup
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Chunk 2
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1)
summary(kobe_streak$length)
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1,
color = "black", fill = "blue")
summary(kobe_streak$length)
kobe_streak <- data.frame(length = calc_streak(kobe$basket))
qplot(x = length, data = kobe_streak, geom = "histogram", binwidth = 1,
color = I("black"), fill = I("blue"))
summary(kobe_streak$length)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(oilabs)
library(dplyr)
library(ggplot2)
data(kobe)
kobe_streak <- calc_streak(kobe$basket)
qplot(x = kobe_streak, geom = "bar",
color = I("black"), fill = I("blue"))
summary(kobe_streak$length)
kobe_streak <- calc_streak(kobe$basket)
qplot(x = kobe_streak, geom = "bar",
color = I("black"), fill = I("blue"))
summary(kobe_streak)
coin_outcomes <- c("heads", "tails")
set.seed(302)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
table(sim_unfair_coin)
unfair_table[1]
coin_outcomes <- c("heads", "tails")
set.seed(302)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
unfair_table <- table(sim_unfair_coin)
unfair_table
unfair_table[1]
qplot(x = sim_streak, geom = "bar", binwidth = 1)
summary(sim_streak)
sim_streak <- calc_streak(sim_basket)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE,
prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
qplot(x = sim_streak, geom = "bar", binwidth = 1)
summary(sim_streak)
qplot(x = sim_streak, geom = "bar")
summary(sim_streak)
qplot(x = sim_streak, geom = "bar", color = I("black"), fill = I("blue"))
summary(sim_streak)
treatment <- c(rep("desipramine", 24), rep("lithium", 24), rep("placebo", 24))
relapse <- c(rep("Yes", 10), rep("No", 14), rep("Yes", 18), rep("No", 6),
rep("Yes", 20), rep("No", 4))
cocaine <- data_frame(treatment, relapse)
# Chunk 1: setup
# List of useful packages
pkg <- c("dplyr", "ggplot2", "knitr", "devtools", "printr")
# Check if packages are not installed and assign the
# names of the uninstalled packages to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg)) {
install.packages(new.pkg, repos = "http://cran.rstudio.com")
}
if(!require(printr)){
devtools::install_github("yihui/printr")
}
# Load the packages into the current environment
lapply(pkg, library, character.only = TRUE)
# Set number of digits to display
#options(digits = 2)
set.seed(2016)
treatment <- c(rep("desipramine", 24), rep("lithium", 24), rep("placebo", 24))
relapse <- c(rep("Yes", 10), rep("No", 14), rep("Yes", 18), rep("No", 6),
rep("Yes", 20), rep("No", 4))
cocaine <- data_frame(treatment, relapse)
View(cocaine)
treatment <- c(rep("desipramine", 24), rep("lithium", 24), rep("placebo", 24))
relapse <- c(rep("Yes", 10), rep("No", 14), rep("Yes", 18), rep("No", 6),
rep("Yes", 20), rep("No", 4))
relapse <- factor(relapse, levels = c("Yes", "No"))
cocaine <- data_frame(treatment, relapse)
table(treatment, relapse)
?kable
?beamer_presentation
?beamer_presentation
0.3*0.62 + 0.46*0.35 + 0.24*0.58
V <- 0.3*0.62 + 0.46*0.35 + 0.24*0.58
prob <- (0.46 * 0.35) / V
prob
num <- 0.017 * 0.78
num
denom <- num + (0.983*0.1)
denom
num2 <- num / denom
num2
.25 * 14
exp(-1)
exp(-1) + exp(-1)
.3 * .55
.3 - .165
.595 + .165
21/24 - 14/24
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, color = I("steelblue"), main = "Null Distribution")
library(knitr)
options(digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, color = I("steelblue"), main = "Null Distribution")
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, color = I("steelblue"), main = "Null Distribution", bins = 8)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, fill = I("steelblue"), main = "Null Distribution", bins = 8)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, fill = I("steelblue"), colour = I("black"),
main = "Null Distribution", bins = 8)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, fill = I("steelblue"), colour = I("black"),
main = "Null Distribution", bins = 8) +
geom_vline(xintercept = 21/24 - 14/24)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 1000)
for(i in 1:1000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, fill = I("steelblue"), colour = I("black"),
main = "Null Distribution", bins = 8) +
geom_vline(xintercept = 21/24 - 14/24, colour = "goldenrod")
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 10000)
for(i in 1:10000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = d, fill = I("steelblue"), colour = I("black"),
main = "Null Distribution", bins = 8) +
geom_vline(xintercept = 21/24 - 14/24, colour = "goldenrod")
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
d <- rep(NA, 10000)
for(i in 1:10000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
d[i] <- diff(tab[, 2]/24)
}
hist(d, col = "steelblue", main = "Null Distribution")
abline(v = .29, col = "goldenrod", lwd = 2)
.3*.55
options(digits = 999)
options(digits = 22)
exp(-3)*(3^2 / factorial(2))
4.5 * exp(-3)
1 - exp(-3)
0.224 / 0.95
?ggsave
# Chunk 1: setup
library(knitr)
#options(digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(mosaic)
gender <- rep(c("M", "F"), each = 24)
promote <- rep(c("Yes", "No"), c(35, 13))
D <- rep(NA, 10000)
d_obs <- 21/24 - 14/24
for(i in 1:10000) {
newgen <- sample(gender)
tab <- table(newgen, promote)
D[i] <- diff(tab[, 2]/24)
}
#hist(d, col = "steelblue", main = "Null Distribution")
#abline(v = .29, col = "goldenrod", lwd = 2)
qplot(x = D, fill = I("steelblue"), colour = I("black"),
main = "Null Distribution", bins = 12) +
geom_vline(xintercept = d_obs, colour = "goldenrod")
ggsave("gender_promote.png", device = "png")
getwd()
setwd("/Users/cismay/Google Drive/ismayc.github.io/slides/05")
?knitr::purl
knitr::purl("05B.Rmd", "05B.R")
# load and install packages
pkg <- c("httr", "rjson", "dplyr", "stringr", "devtools", "leaflet")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
suppressMessages(library(httr))
suppressMessages(library(rjson))
suppressMessages(library(dplyr))
suppressMessages(library(stringr))
suppressMessages(library(devtools))
suppressMessages(if (!require("leaflet")) devtools::install_github("rstudio/leaflet"))
suppressMessages(library(leaflet))
mean(p_hats$in_tail)
# Chunk 1: setup
library(knitr)
#options(digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Chunk 2: prelim
library(ggplot2)
set.seed(53)
# Chunk 3: sim
library(mosaic)
p_hats <- do(10000) * rflip(n = 75)
head(p_hats)
# Chunk 4: dist
qplot(x = prop, data = p_hats, geom = "histogram",
binwidth = .0135, fill = I("white"), col = I("darkgreen"))
mean(p_hats$in_tail)
p_hats
# Chunk 1: setup
library(knitr)
#options(digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Chunk 2: prelim
library(ggplot2)
set.seed(53)
# Chunk 3: sim
library(mosaic)
p_hats <- do(10000) * rflip(n = 75)
head(p_hats)
# Chunk 4: dist
qplot(x = prop, data = p_hats, geom = "histogram",
binwidth = .0135, fill = I("white"), col = I("darkgreen"))
# Chunk 5: dist2
library(dplyr)
p_hats <-
p_hats %>%
mutate(in_tail = ifelse(prop >= 2/3,
TRUE, FALSE))
qplot(x = prop, data = p_hats, geom = "histogram", fill = in_tail,
binwidth = .0135, fill = I("white"), col = I("darkgreen")) +
theme(legend.position = "none") +
scale_fill_manual(values = c("white", "darkgreen")) +
geom_vline(xintercept = 2/3, col = "deepskyblue")
mean(p_hats$in_tail)
# Chunk 1: setup
library(knitr)
#options(digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Chunk 2: prelim
library(ggplot2)
set.seed(53)
# Chunk 3: sim
library(mosaic)
p_hats <- do(10000) * rflip(n = 75)
head(p_hats)
# Chunk 4: dist
qplot(x = prop, data = p_hats, geom = "histogram",
binwidth = .0135, fill = I("white"), col = I("darkgreen"))
library(dplyr)
p_hats <- p_hats %>%
mutate(in_tail = ifelse(prop >= 2/3, TRUE, FALSE))
qplot(x = prop, data = p_hats, geom = "histogram", fill = in_tail,
binwidth = .0135, fill = I("white"), col = I("darkgreen")) +
theme(legend.position = "none") +
scale_fill_manual(values = c("white", "darkgreen")) +
geom_vline(xintercept = 2/3, col = "deepskyblue")
ggsave("gay_mar_sim.png")
